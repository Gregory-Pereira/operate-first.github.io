{"componentChunkName":"component---src-templates-jupyter-notebook-js","path":"/data-science/ocp-ci-analysis/notebooks/failure-type-classification/failure_type_functions.ipynb","result":{"data":{"site":{"siteMetadata":{"title":"Operate First"}},"jupyterNotebook":{"id":"0c7491d4-c98d-526b-980a-c7cd138befb3 >>> JupyterNotebook","html":"<div class=\"notebook-render\"><div class=\"sc-ifAKCX zMCZx\"><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-iwsKbI exQuEV markdown\"><h1>Failure type classification</h1>\n<p>This notebook contains the helper functions to run <code>failure_type_classifier.ipynb</code>.</p></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[1]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">import</span> datetime\n<span class=\"token\" style=\"color:#0000ff\">import</span> pandas <span class=\"token\" style=\"color:#0000ff\">as</span> pd\n<span class=\"token\" style=\"color:#0000ff\">import</span> numpy <span class=\"token\" style=\"color:#0000ff\">as</span> np\n<span class=\"token\" style=\"color:#0000ff\">import</span> boto3\n<span class=\"token\" style=\"color:#0000ff\">from</span> io <span class=\"token\" style=\"color:#0000ff\">import</span> BytesIO\n<span class=\"token\" style=\"color:#0000ff\">from</span> scipy<span class=\"token\" style=\"color:#393A34\">.</span>signal <span class=\"token\" style=\"color:#0000ff\">import</span> convolve2d\n<span class=\"token\" style=\"color:#0000ff\">from</span> pathlib <span class=\"token\" style=\"color:#0000ff\">import</span> Path\n\n<span class=\"token\" style=\"color:#0000ff\">from</span> ipynb<span class=\"token\" style=\"color:#393A34\">.</span>fs<span class=\"token\" style=\"color:#393A34\">.</span>defs<span class=\"token\" style=\"color:#393A34\">.</span>testgrid_flakiness_detection <span class=\"token\" style=\"color:#0000ff\">import</span> <span class=\"token\" style=\"color:#393A34\">(</span>  <span class=\"token\" style=\"color:#008000;font-style:italic\"># noqa: E402</span>\n    calc_optimal_flakiness_score<span class=\"token\" style=\"color:#393A34\">,</span>  <span class=\"token\" style=\"color:#008000;font-style:italic\"># noqa: E402</span>\n    decode_run_length<span class=\"token\" style=\"color:#393A34\">,</span>  <span class=\"token\" style=\"color:#008000;font-style:italic\"># noqa: E402</span>\n<span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[2]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">detect_infra_flake</span><span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This function takes a 2d numpy array &quot;grid&quot; and uses a diagonal edge detecting\n    filter to identify time windows in which &#x27;infrastructure flakes&#x27; occured.\n\n    Returns a list of dates and test indexes\n    &quot;&quot;&quot;</span>\n    infra_flakes_found <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># 2d filter that will have its highest value when convolved with a diagonal pattern.</span>\n    infra_flake_filter <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># Find the spots on the map where the convolution had its maximum value.</span>\n    spots <span class=\"token\" style=\"color:#393A34\">=</span> convolve2d<span class=\"token\" style=\"color:#393A34\">(</span>infra_flake_filter<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> mode<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;valid&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    infra_flakes <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>where<span class=\"token\" style=\"color:#393A34\">(</span>spots <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">4</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    dates <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>tab_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>grid_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;timestamps&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    infra_flake_dates <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>dates<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span>infra_flakes<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    infra_flake_dates <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n        datetime<span class=\"token\" style=\"color:#393A34\">.</span>date<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> infra_flake_dates\n    <span class=\"token\" style=\"color:#393A34\">]</span>\n\n    infra_flake_tests <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span>infra_flakes<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    infra_flakes_found <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">zip</span><span class=\"token\" style=\"color:#393A34\">(</span>infra_flake_dates<span class=\"token\" style=\"color:#393A34\">,</span> infra_flake_tests<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> infra_flakes_found\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">detect_install_flake</span><span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    If greater than 90% of tests are not run for 2 or more consecutive days,\n    then we will record this period as as an install flake.\n    &quot;&quot;&quot;</span>\n    install_flakes <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    n_rows<span class=\"token\" style=\"color:#393A34\">,</span> n_cols <span class=\"token\" style=\"color:#393A34\">=</span> grid<span class=\"token\" style=\"color:#393A34\">.</span>shape\n    grid <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>grid<span class=\"token\" style=\"color:#393A34\">)</span>\n    not_run_percent <span class=\"token\" style=\"color:#393A34\">=</span> grid<span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token builtin\">apply</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">lambda</span> x<span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token builtin\">sum</span><span class=\"token\" style=\"color:#393A34\">(</span>x <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">/</span> n_rows<span class=\"token\" style=\"color:#393A34\">,</span> axis<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    install_errors <span class=\"token\" style=\"color:#393A34\">=</span> not_run_percent <span class=\"token\" style=\"color:#393A34\">&gt;</span> <span class=\"token\" style=\"color:#36acaa\">0.90</span>\n    install_error_streaks <span class=\"token\" style=\"color:#393A34\">=</span> run_length_encode<span class=\"token\" style=\"color:#393A34\">(</span>install_errors<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> install_error_streaks<span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">if</span> i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#0000ff\">is</span> <span class=\"token\" style=\"color:#36acaa\">True</span> <span class=\"token\" style=\"color:#0000ff\">and</span> i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">&gt;=</span> <span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            install_flakes<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span>i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">-</span> i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    dates <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>tab_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>grid_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;timestamps&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    install_flake_dates <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> install_flakes<span class=\"token\" style=\"color:#393A34\">:</span>\n        install_flake_dates <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>dates<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">[</span>install_flakes<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span>\n        install_flake_dates <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n            datetime<span class=\"token\" style=\"color:#393A34\">.</span>date<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> install_flake_dates\n        <span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> install_flake_dates\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">detect_new_test_failures</span><span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    If 6 or more consecutive failures occur, then we will record this period\n    as a new test failure\n    &quot;&quot;&quot;</span>\n    grid <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>grid<span class=\"token\" style=\"color:#393A34\">)</span>\n    new_test_failures <span class=\"token\" style=\"color:#393A34\">=</span> grid<span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token builtin\">apply</span><span class=\"token\" style=\"color:#393A34\">(</span>single_new_test_failure<span class=\"token\" style=\"color:#393A34\">,</span> axis<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    none_empties <span class=\"token\" style=\"color:#393A34\">=</span> new_test_failures<span class=\"token\" style=\"color:#393A34\">[</span>new_test_failures<span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token builtin\">apply</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">lambda</span> x<span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">&gt;</span> <span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    dates <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>tab_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>grid_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;timestamps&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">for</span> i<span class=\"token\" style=\"color:#393A34\">,</span> j <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>none_empties<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        none_empties<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>dates<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">[</span>x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> j<span class=\"token\" style=\"color:#393A34\">]</span>\n\n        none_empties<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n            <span class=\"token\" style=\"color:#393A34\">(</span>\n                datetime<span class=\"token\" style=\"color:#393A34\">.</span>date<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                datetime<span class=\"token\" style=\"color:#393A34\">.</span>date<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            <span class=\"token\" style=\"color:#393A34\">)</span>\n            <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> none_empties<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span>\n        <span class=\"token\" style=\"color:#393A34\">]</span>\n\n    idx <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span>none_empties<span class=\"token\" style=\"color:#393A34\">.</span>index<span class=\"token\" style=\"color:#393A34\">)</span>\n    new_test_failures <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">(</span>idx<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> none_empties<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">range</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>none_empties<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> new_test_failures\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">single_new_test_failure</span><span class=\"token\" style=\"color:#393A34\">(</span>test<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;given a test as an array of values, uses run length encoding to\n    find occurences of 6 or moe consecutive failures for a test.&quot;&quot;&quot;</span>\n    new_test_failure <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    rle <span class=\"token\" style=\"color:#393A34\">=</span> run_length_encode<span class=\"token\" style=\"color:#393A34\">(</span>test<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    end_of_grid <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> rle<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">0</span> <span class=\"token\" style=\"color:#0000ff\">and</span> rle<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">for</span> i<span class=\"token\" style=\"color:#393A34\">,</span> j <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">reversed</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>rle<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">:</span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            <span class=\"token\" style=\"color:#0000ff\">if</span> j<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                end_of_grid <span class=\"token\" style=\"color:#393A34\">=</span> rle<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">:</span><span class=\"token\" style=\"color:#393A34\">]</span>\n                <span class=\"token\" style=\"color:#0000ff\">break</span>\n\n        count <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n        <span class=\"token\" style=\"color:#0000ff\">for</span> streak <span class=\"token\" style=\"color:#0000ff\">in</span> end_of_grid<span class=\"token\" style=\"color:#393A34\">:</span>\n            <span class=\"token\" style=\"color:#0000ff\">if</span> streak<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">:</span>\n                count <span class=\"token\" style=\"color:#393A34\">+=</span> streak<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span>\n\n        <span class=\"token\" style=\"color:#0000ff\">if</span> count <span class=\"token\" style=\"color:#393A34\">&gt;=</span> <span class=\"token\" style=\"color:#36acaa\">6</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            new_test_failure<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span>end_of_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> end_of_grid<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> new_test_failure\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">detect_flaky_test</span><span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Apply run calc_optimal_flakiness_score to out grid\n    &quot;&quot;&quot;</span>\n\n    flaky_tests <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    dates <span class=\"token\" style=\"color:#393A34\">=</span> data<span class=\"token\" style=\"color:#393A34\">[</span>tab_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span>grid_name<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;timestamps&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> i<span class=\"token\" style=\"color:#393A34\">,</span> j <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>grid<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n\n        <span class=\"token\" style=\"color:#008000;font-style:italic\"># use the calc_optimal_flakiness_score function imported from testgrid_flakiness_detection notebook</span>\n        found_flakes <span class=\"token\" style=\"color:#393A34\">=</span> calc_optimal_flakiness_score<span class=\"token\" style=\"color:#393A34\">(</span>grid<span class=\"token\" style=\"color:#393A34\">[</span>i<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">if</span> <span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>found_flakes<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>keys<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">&gt;</span> <span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            times <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>dates<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">[</span>x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> found_flakes<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">.</span>keys<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">]</span>\n            times <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span>\n                <span class=\"token\" style=\"color:#393A34\">(</span>\n                    datetime<span class=\"token\" style=\"color:#393A34\">.</span>date<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                    datetime<span class=\"token\" style=\"color:#393A34\">.</span>date<span class=\"token\" style=\"color:#393A34\">.</span>fromtimestamp<span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">//</span> <span class=\"token\" style=\"color:#36acaa\">1000</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">,</span>\n                <span class=\"token\" style=\"color:#393A34\">)</span>\n                <span class=\"token\" style=\"color:#0000ff\">for</span> x <span class=\"token\" style=\"color:#0000ff\">in</span> times\n            <span class=\"token\" style=\"color:#393A34\">]</span>\n\n            flaky_tests<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span>i<span class=\"token\" style=\"color:#393A34\">,</span> found_flakes<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">,</span> times<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> flaky_tests\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">detect_failures</span><span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> grid<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    This takens in a grid and runs all of our detectors and outputs a report\n    &quot;&quot;&quot;</span>\n\n    failure_report <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">{</span><span class=\"token\" style=\"color:#393A34\">}</span>\n\n    <span class=\"token\" style=\"color:#008000;font-style:italic\"># use the decode_run_length function imported from TestGrid_EDA notebook</span>\n    x <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">list</span><span class=\"token\" style=\"color:#393A34\">(</span>pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>grid<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span>statuses<span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token builtin\">apply</span><span class=\"token\" style=\"color:#393A34\">(</span>decode_run_length<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    failure_report<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;flaky_tests&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> detect_flaky_test<span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    x <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>DataFrame<span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">.</span><span class=\"token builtin\">apply</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#0000ff\">lambda</span> x<span class=\"token\" style=\"color:#393A34\">:</span> <span class=\"token\" style=\"color:#393A34\">[</span>normalize<span class=\"token\" style=\"color:#393A34\">(</span>y<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#0000ff\">for</span> y <span class=\"token\" style=\"color:#0000ff\">in</span> x<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    x <span class=\"token\" style=\"color:#393A34\">=</span> np<span class=\"token\" style=\"color:#393A34\">.</span>array<span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span>\n\n    failure_report<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;infra_flake&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> detect_infra_flake<span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span>\n    failure_report<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;install_flake&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> detect_install_flake<span class=\"token\" style=\"color:#393A34\">(</span>data<span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span>\n    failure_report<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;new_test_failure&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> detect_new_test_failures<span class=\"token\" style=\"color:#393A34\">(</span>\n        data<span class=\"token\" style=\"color:#393A34\">,</span> x<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name\n    <span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">return</span> failure_report\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">print_report</span><span class=\"token\" style=\"color:#393A34\">(</span>results<span class=\"token\" style=\"color:#393A34\">,</span> tab_name<span class=\"token\" style=\"color:#393A34\">,</span> grid_name<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span>\n        f&quot;Failure Report <span class=\"token\" style=\"color:#0000ff\">for</span><span class=\"token\" style=\"color:#393A34\">:</span> \\n\\\n    <span class=\"token\" style=\"color:#393A34\">{</span>tab_name<span class=\"token\" style=\"color:#393A34\">}</span><span class=\"token\" style=\"color:#393A34\">/</span><span class=\"token\" style=\"color:#393A34\">{</span>grid_name<span class=\"token\" style=\"color:#393A34\">}</span>&quot;<span class=\"token\" style=\"color:#393A34\">,</span>\n        end<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#A31515\">&quot;\\n\\n&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Flaky Tests:&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> ft <span class=\"token\" style=\"color:#0000ff\">in</span> results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;flaky_tests&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;Test number </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>ft<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\"> had flakes at:&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> ft<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">2</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\"> to </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;\\b&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span>\n        <span class=\"token\" style=\"color:#A31515\">&quot;Infra Flake:&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n    <span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> infr <span class=\"token\" style=\"color:#0000ff\">in</span> results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;infra_flake&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;Test number </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>infr<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\"> had an infra flake at </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>infr<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;\\b&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;Install Flake:&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> inst <span class=\"token\" style=\"color:#0000ff\">in</span> results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;install_flake&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;An install flake started on </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>inst<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;\\b&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#A31515\">&quot;New Test Failures:&quot;</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> ntf <span class=\"token\" style=\"color:#0000ff\">in</span> results<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#A31515\">&quot;new_test_failure&quot;</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;Test number </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>ntf<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\"> had new test failures at:&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">for</span> i <span class=\"token\" style=\"color:#0000ff\">in</span> ntf<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            <span class=\"token\" style=\"color:#0000ff\">print</span><span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\"> to </span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>i<span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[3]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#008000;font-style:italic\"># We want to re-map the values so that the output of the convolution will be more interpretable.</span>\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">normalize</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> x <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> x <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">12</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> <span class=\"token\" style=\"color:#393A34\">-</span><span class=\"token\" style=\"color:#36acaa\">1</span>\n    <span class=\"token\" style=\"color:#0000ff\">if</span> x <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token\" style=\"color:#36acaa\">0</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> <span class=\"token\" style=\"color:#36acaa\">0</span>\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">run_length_encode</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;run length encoding&quot;&quot;&quot;</span>\n\n    rle <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#393A34\">[</span><span class=\"token\" style=\"color:#393A34\">]</span>\n    count <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> i<span class=\"token\" style=\"color:#393A34\">,</span> j <span class=\"token\" style=\"color:#0000ff\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        key <span class=\"token\" style=\"color:#393A34\">=</span> j\n        <span class=\"token\" style=\"color:#0000ff\">if</span> i <span class=\"token\" style=\"color:#393A34\">==</span> <span class=\"token builtin\">len</span><span class=\"token\" style=\"color:#393A34\">(</span>x<span class=\"token\" style=\"color:#393A34\">)</span> <span class=\"token\" style=\"color:#393A34\">-</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            rle<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span>key<span class=\"token\" style=\"color:#393A34\">,</span> count<span class=\"token\" style=\"color:#393A34\">,</span> i<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n            <span class=\"token\" style=\"color:#0000ff\">break</span>\n        <span class=\"token\" style=\"color:#0000ff\">if</span> key <span class=\"token\" style=\"color:#393A34\">==</span> x<span class=\"token\" style=\"color:#393A34\">[</span>i <span class=\"token\" style=\"color:#393A34\">+</span> <span class=\"token\" style=\"color:#36acaa\">1</span><span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            count <span class=\"token\" style=\"color:#393A34\">+=</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\n        <span class=\"token\" style=\"color:#0000ff\">else</span><span class=\"token\" style=\"color:#393A34\">:</span>\n            rle<span class=\"token\" style=\"color:#393A34\">.</span>append<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">(</span>key<span class=\"token\" style=\"color:#393A34\">,</span> count<span class=\"token\" style=\"color:#393A34\">,</span> i<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n            count <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token\" style=\"color:#36acaa\">1</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> rle</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[4]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">class</span> <span class=\"token\" style=\"color:#2B91AF\">CephCommunication</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Class to establish communication with a ceph s3 bucket.\n    It connects with the bucket and provides methods to read and write data in the parquet format.\n    &quot;&quot;&quot;</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">__init__</span><span class=\"token\" style=\"color:#393A34\">(</span>\n        self<span class=\"token\" style=\"color:#393A34\">,</span> s3_endpoint_url<span class=\"token\" style=\"color:#393A34\">,</span> aws_access_key_id<span class=\"token\" style=\"color:#393A34\">,</span> aws_secret_access_key<span class=\"token\" style=\"color:#393A34\">,</span> s3_bucket\n    <span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        self<span class=\"token\" style=\"color:#393A34\">.</span>s3_endpoint_url <span class=\"token\" style=\"color:#393A34\">=</span> s3_endpoint_url\n        self<span class=\"token\" style=\"color:#393A34\">.</span>aws_access_key_id <span class=\"token\" style=\"color:#393A34\">=</span> aws_access_key_id\n        self<span class=\"token\" style=\"color:#393A34\">.</span>aws_secret_access_key <span class=\"token\" style=\"color:#393A34\">=</span> aws_secret_access_key\n        self<span class=\"token\" style=\"color:#393A34\">.</span>s3_resource <span class=\"token\" style=\"color:#393A34\">=</span> boto3<span class=\"token\" style=\"color:#393A34\">.</span>resource<span class=\"token\" style=\"color:#393A34\">(</span>\n            <span class=\"token\" style=\"color:#A31515\">&quot;s3&quot;</span><span class=\"token\" style=\"color:#393A34\">,</span>\n            endpoint_url<span class=\"token\" style=\"color:#393A34\">=</span>self<span class=\"token\" style=\"color:#393A34\">.</span>s3_endpoint_url<span class=\"token\" style=\"color:#393A34\">,</span>\n            aws_access_key_id<span class=\"token\" style=\"color:#393A34\">=</span>self<span class=\"token\" style=\"color:#393A34\">.</span>aws_access_key_id<span class=\"token\" style=\"color:#393A34\">,</span>\n            aws_secret_access_key<span class=\"token\" style=\"color:#393A34\">=</span>self<span class=\"token\" style=\"color:#393A34\">.</span>aws_secret_access_key<span class=\"token\" style=\"color:#393A34\">,</span>\n        <span class=\"token\" style=\"color:#393A34\">)</span>\n        self<span class=\"token\" style=\"color:#393A34\">.</span>bucket <span class=\"token\" style=\"color:#393A34\">=</span> s3_bucket\n        <span class=\"token\" style=\"color:#008000;font-style:italic\">## Todo: Add try catch</span>\n\n    <span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">upload_to_ceph</span><span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">,</span> dataframe<span class=\"token\" style=\"color:#393A34\">,</span> s3_path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n        This helper function takes as input the data frame to be uploaded, and the output filename.\n        It then saves the data frame in the defined ceph bucket.\n        &quot;&quot;&quot;</span>\n        parquet_buffer <span class=\"token\" style=\"color:#393A34\">=</span> BytesIO<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        dataframe<span class=\"token\" style=\"color:#393A34\">.</span>to_parquet<span class=\"token\" style=\"color:#393A34\">(</span>parquet_buffer<span class=\"token\" style=\"color:#393A34\">)</span>\n        s3_obj <span class=\"token\" style=\"color:#393A34\">=</span> self<span class=\"token\" style=\"color:#393A34\">.</span>s3_resource<span class=\"token\" style=\"color:#393A34\">.</span>Object<span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">.</span>bucket<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>s3_path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n        status <span class=\"token\" style=\"color:#393A34\">=</span> s3_obj<span class=\"token\" style=\"color:#393A34\">.</span>put<span class=\"token\" style=\"color:#393A34\">(</span>Body<span class=\"token\" style=\"color:#393A34\">=</span>parquet_buffer<span class=\"token\" style=\"color:#393A34\">.</span>getvalue<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> status\n\n    <span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">read_from_ceph</span><span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">,</span> s3_path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n        <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n        Helper function to read from ceph and see if the saved data is correct.\n        &quot;&quot;&quot;</span>\n        <span class=\"token builtin\">buffer</span> <span class=\"token\" style=\"color:#393A34\">=</span> BytesIO<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        s3_object <span class=\"token\" style=\"color:#393A34\">=</span> self<span class=\"token\" style=\"color:#393A34\">.</span>s3_resource<span class=\"token\" style=\"color:#393A34\">.</span>Object<span class=\"token\" style=\"color:#393A34\">(</span>self<span class=\"token\" style=\"color:#393A34\">.</span>bucket<span class=\"token\" style=\"color:#393A34\">,</span> <span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>s3_path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n        s3_object<span class=\"token\" style=\"color:#393A34\">.</span>download_fileobj<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">buffer</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        df_temp <span class=\"token\" style=\"color:#393A34\">=</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>read_parquet<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token builtin\">buffer</span><span class=\"token\" style=\"color:#393A34\">)</span>\n        <span class=\"token\" style=\"color:#0000ff\">return</span> df_temp</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[5]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">save_to_disk</span><span class=\"token\" style=\"color:#393A34\">(</span>dataframe<span class=\"token\" style=\"color:#393A34\">,</span> path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Helper function to save the dataframe\n    as a parquet file to disk.\n    &quot;&quot;&quot;</span>\n    dataset_base_path <span class=\"token\" style=\"color:#393A34\">=</span> Path<span class=\"token\" style=\"color:#393A34\">(</span>path<span class=\"token\" style=\"color:#393A34\">)</span>\n    dataset_base_path<span class=\"token\" style=\"color:#393A34\">.</span>mkdir<span class=\"token\" style=\"color:#393A34\">(</span>parents<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">,</span> exist_ok<span class=\"token\" style=\"color:#393A34\">=</span><span class=\"token\" style=\"color:#36acaa\">True</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    dataframe<span class=\"token\" style=\"color:#393A34\">.</span>to_parquet<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> <span class=\"token\" style=\"color:#36acaa\">True</span>\n\n\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">read_from_disk</span><span class=\"token\" style=\"color:#393A34\">(</span>path<span class=\"token\" style=\"color:#393A34\">,</span> filename<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token triple-quoted-string\" style=\"color:#A31515\">&quot;&quot;&quot;\n    Helper function to read from disk and see if the saved data is the same.\n    &quot;&quot;&quot;</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> pd<span class=\"token\" style=\"color:#393A34\">.</span>read_parquet<span class=\"token\" style=\"color:#393A34\">(</span><span class=\"token string-interpolation\"><span class=\"token\" style=\"color:#A31515\">f&quot;</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>path<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">/</span><span class=\"token interpolation\"><span class=\"token\" style=\"color:#393A34\">{</span>filename<span class=\"token\" style=\"color:#393A34\">}</span></span><span class=\"token\" style=\"color:#A31515\">&quot;</span></span><span class=\"token\" style=\"color:#393A34\">)</span></code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[6]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"><span class=\"token\" style=\"color:#008000;font-style:italic\"># Temporary formating of the results dictionary</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># The results dic contains datetime object and</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># tuple keys that can&#x27;t be jsoned. At some point</span>\n<span class=\"token\" style=\"color:#008000;font-style:italic\"># we&#x27;ll have to define an output schema.</span>\n<span class=\"token\" style=\"color:#0000ff\">def</span> <span class=\"token\" style=\"color:#393A34\">format_results</span><span class=\"token\" style=\"color:#393A34\">(</span>results<span class=\"token\" style=\"color:#393A34\">)</span><span class=\"token\" style=\"color:#393A34\">:</span>\n    <span class=\"token\" style=\"color:#0000ff\">for</span> key <span class=\"token\" style=\"color:#0000ff\">in</span> results<span class=\"token\" style=\"color:#393A34\">:</span>\n        results<span class=\"token\" style=\"color:#393A34\">[</span>key<span class=\"token\" style=\"color:#393A34\">]</span> <span class=\"token\" style=\"color:#393A34\">=</span> <span class=\"token builtin\">str</span><span class=\"token\" style=\"color:#393A34\">(</span>results<span class=\"token\" style=\"color:#393A34\">[</span>key<span class=\"token\" style=\"color:#393A34\">]</span><span class=\"token\" style=\"color:#393A34\">)</span>\n    <span class=\"token\" style=\"color:#0000ff\">return</span> results</code></pre></div></div><div class=\"sc-bxivhb HLmih cell\" style=\"box-shadow:none\"><div class=\"sc-gzVnrw iiEGBE input-container\"><div class=\"sc-bwzfXH jsVRSS prompt\">[ ]</div><pre class=\"sc-bZQynM dQAqiJ input\" style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none;padding:10px 0px 10px 10px;margin:0px;overflow:auto;border:none;background-color:var(--cm-background, #fafafa)\"><code style=\"color:#393A34;font-family:&quot;Consolas&quot;, &quot;Bitstream Vera Sans Mono&quot;, &quot;Courier New&quot;, Courier, monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;font-size:0.95em;line-height:1.2em;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none\"></code></pre></div></div></div></div>","fields":{"srcLink":"https://github.com/aicoe-aiops/ocp-ci-analysis/blob/master/notebooks/failure-type-classification/failure_type_functions.ipynb"}}},"pageContext":{"id":"0c7491d4-c98d-526b-980a-c7cd138befb3 >>> JupyterNotebook"}},"staticQueryHashes":["117426894","3000541721","533861647"]}