{"version":3,"sources":["webpack:///./src/templates/MarkdownRemark.js"],"names":["MarkdownTemplate","data","site","markdownRemark","location","siteTitle","siteMetadata","title","srcLink","fields","banner","frontmatter","description","className","extraClasses","variant","PageSectionVariants","light","isWidthLimited","dangerouslySetInnerHTML","__html","html"],"mappings":"6FAAA,0FAqEeA,UAnCU,SAAC,GAAkD,IAAD,IAA/CC,KAAQC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,eAAkBC,EAAe,EAAfA,SACpDC,EAAYH,EAAKI,aAAaC,MAEpC,OACE,kBAAC,IAAD,CACEH,SAAUA,EACVG,MAAOF,EACPG,QAASL,EAAeM,OAAOD,QAC/BE,OAAQP,EAAeQ,YAAYD,QAEnC,kBAAC,IAAD,CACEH,MAAOJ,EAAeQ,YAAYJ,MAClCK,YAAaT,EAAeQ,YAAYC,cAE1C,kBAAC,IAAD,CACEC,UAAS,OAASV,EAAeQ,YAAYG,aAC7CC,QAASC,IAAoBC,MAC7BC,gBAAc,GAEd,kBAAC,IAAD,KACE,4BAAKf,EAAeQ,YAAYJ,OAChC,6BAASY,wBAAyB,CAAEC,OAAQjB,EAAekB,a","file":"component---src-templates-markdown-remark-js-3c42e73d393d16d469c1.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { PageSection, PageSectionVariants, TextContent } from '@patternfly/react-core';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport './MarkdownRemark.scss';\n\nexport const pageQuery = graphql`\n  query MarkdownQuery($id: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      fields {\n        srcLink\n      }\n      frontmatter {\n        title\n        description\n        extraClasses\n        banner {\n          html\n        }\n      }\n    }\n  }\n`;\n\nconst MarkdownTemplate = ({ data: { site, markdownRemark }, location }) => {\n  const siteTitle = site.siteMetadata.title;\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      srcLink={markdownRemark.fields.srcLink}\n      banner={markdownRemark.frontmatter.banner}\n    >\n      <SEO\n        title={markdownRemark.frontmatter.title}\n        description={markdownRemark.frontmatter.description}\n      />\n      <PageSection\n        className={`doc ${markdownRemark.frontmatter.extraClasses}`}\n        variant={PageSectionVariants.light}\n        isWidthLimited\n      >\n        <TextContent>\n          <h1>{markdownRemark.frontmatter.title}</h1>\n          <section dangerouslySetInnerHTML={{ __html: markdownRemark.html }} />\n        </TextContent>\n      </PageSection>\n    </Layout>\n  );\n};\nMarkdownTemplate.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.object,\n    markdownRemark: PropTypes.object,\n  }),\n  location: PropTypes.object,\n};\n\nexport default MarkdownTemplate;\n"],"sourceRoot":""}